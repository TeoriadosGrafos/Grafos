/*
 Trabalho de Teoria dos Grafos
 Alunos: Ana Carolyne G. França, Henry Candido, Juliana de O. Maciel.
 Professor: Daves Martins
 Disciplina: Teoria dos Grafos
 
 */
package grafosxml;

import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.DomDriver;
import java.io.File;
import java.util.Arrays;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

public class DadosGrafos extends javax.swing.JFrame {

    Grafo grafo;

    public DadosGrafos() {
        initComponents();
        setLocationRelativeTo(null);// deixa a janela no centro da tela
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jBOrdemGrafo = new javax.swing.JButton();
        jBConjuntoVertices = new javax.swing.JButton();
        jBConjuntoArestas = new javax.swing.JButton();
        jBVerticesAdjacentes = new javax.swing.JButton();
        jBArestasAdjacentes = new javax.swing.JButton();
        jBIncidenciaAresta = new javax.swing.JButton();
        jBGrauVertice = new javax.swing.JButton();
        jBArestasIndependentes = new javax.swing.JButton();
        jBVerticesIsolados = new javax.swing.JButton();
        jBAbrirGrafo = new javax.swing.JButton();
        jtArqGrafo = new javax.swing.JTextField();
        jBGrauRecepcao = new javax.swing.JButton();
        jBGrauEmissao = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtConjuntoArestas = new javax.swing.JTextArea();
        jBFechar = new javax.swing.JButton();
        jBVerticesTerminais = new javax.swing.JButton();
        jBVerticesIndependentes = new javax.swing.JButton();
        jtOrdemGrafo = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtConjuntoVertices = new javax.swing.JTextArea();
        jBVerticesFontes = new javax.swing.JButton();
        jBVerticesSumidouros = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jBOrdemGrafo.setBackground(new java.awt.Color(255, 255, 51));
        jBOrdemGrafo.setText("Ordem do grafo");
        jBOrdemGrafo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBOrdemGrafoActionPerformed(evt);
            }
        });

        jBConjuntoVertices.setBackground(new java.awt.Color(255, 255, 51));
        jBConjuntoVertices.setText("Exibir conjunto dos vértices");
        jBConjuntoVertices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConjuntoVerticesActionPerformed(evt);
            }
        });

        jBConjuntoArestas.setBackground(new java.awt.Color(255, 255, 51));
        jBConjuntoArestas.setText("Exibir conjunto das arestas");
        jBConjuntoArestas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConjuntoArestasActionPerformed(evt);
            }
        });

        jBVerticesAdjacentes.setBackground(new java.awt.Color(0, 0, 0));
        jBVerticesAdjacentes.setForeground(new java.awt.Color(255, 255, 255));
        jBVerticesAdjacentes.setText("Vértices adjacentes");
        jBVerticesAdjacentes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVerticesAdjacentesActionPerformed(evt);
            }
        });

        jBArestasAdjacentes.setBackground(new java.awt.Color(0, 0, 0));
        jBArestasAdjacentes.setForeground(new java.awt.Color(255, 255, 255));
        jBArestasAdjacentes.setText("Arestas adjacentes");
        jBArestasAdjacentes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBArestasAdjacentesActionPerformed(evt);
            }
        });

        jBIncidenciaAresta.setBackground(new java.awt.Color(0, 0, 0));
        jBIncidenciaAresta.setForeground(new java.awt.Color(255, 255, 255));
        jBIncidenciaAresta.setText("Incidência das arestas");
        jBIncidenciaAresta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBIncidenciaArestaActionPerformed(evt);
            }
        });

        jBGrauVertice.setBackground(new java.awt.Color(0, 0, 0));
        jBGrauVertice.setForeground(new java.awt.Color(255, 255, 255));
        jBGrauVertice.setText("Graus dos vértices");
        jBGrauVertice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGrauVerticeActionPerformed(evt);
            }
        });

        jBArestasIndependentes.setBackground(new java.awt.Color(0, 0, 0));
        jBArestasIndependentes.setForeground(new java.awt.Color(255, 255, 255));
        jBArestasIndependentes.setText("Arestas independentes");
        jBArestasIndependentes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBArestasIndependentesActionPerformed(evt);
            }
        });

        jBVerticesIsolados.setBackground(new java.awt.Color(0, 0, 0));
        jBVerticesIsolados.setForeground(new java.awt.Color(255, 255, 255));
        jBVerticesIsolados.setText("Vértices isolados");
        jBVerticesIsolados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVerticesIsoladosActionPerformed(evt);
            }
        });

        jBAbrirGrafo.setBackground(new java.awt.Color(255, 255, 51));
        jBAbrirGrafo.setText("Abrir grafo");
        jBAbrirGrafo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAbrirGrafoActionPerformed(evt);
            }
        });

        jtArqGrafo.setEditable(false);
        jtArqGrafo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtArqGrafoActionPerformed(evt);
            }
        });

        jBGrauRecepcao.setBackground(new java.awt.Color(0, 0, 0));
        jBGrauRecepcao.setForeground(new java.awt.Color(255, 255, 255));
        jBGrauRecepcao.setText("Graus de recepção");
        jBGrauRecepcao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGrauRecepcaoActionPerformed(evt);
            }
        });

        jBGrauEmissao.setBackground(new java.awt.Color(0, 0, 0));
        jBGrauEmissao.setForeground(new java.awt.Color(255, 255, 255));
        jBGrauEmissao.setText("Graus de emissão");
        jBGrauEmissao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGrauEmissaoActionPerformed(evt);
            }
        });

        jtConjuntoArestas.setEditable(false);
        jtConjuntoArestas.setColumns(20);
        jtConjuntoArestas.setRows(5);
        jScrollPane1.setViewportView(jtConjuntoArestas);

        jBFechar.setText("Fechar");
        jBFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBFecharActionPerformed(evt);
            }
        });

        jBVerticesTerminais.setBackground(new java.awt.Color(0, 0, 0));
        jBVerticesTerminais.setForeground(new java.awt.Color(255, 255, 255));
        jBVerticesTerminais.setText("Vértices terminais");
        jBVerticesTerminais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVerticesTerminaisActionPerformed(evt);
            }
        });

        jBVerticesIndependentes.setBackground(new java.awt.Color(0, 0, 0));
        jBVerticesIndependentes.setForeground(new java.awt.Color(255, 255, 255));
        jBVerticesIndependentes.setText("Vértices independentes");
        jBVerticesIndependentes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVerticesIndependentesActionPerformed(evt);
            }
        });

        jtOrdemGrafo.setEditable(false);

        jtConjuntoVertices.setEditable(false);
        jtConjuntoVertices.setColumns(20);
        jtConjuntoVertices.setRows(5);
        jScrollPane2.setViewportView(jtConjuntoVertices);

        jBVerticesFontes.setBackground(new java.awt.Color(0, 0, 0));
        jBVerticesFontes.setForeground(new java.awt.Color(255, 255, 255));
        jBVerticesFontes.setText("Vértices fontes");
        jBVerticesFontes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVerticesFontesActionPerformed(evt);
            }
        });

        jBVerticesSumidouros.setBackground(new java.awt.Color(0, 0, 0));
        jBVerticesSumidouros.setForeground(new java.awt.Color(255, 255, 255));
        jBVerticesSumidouros.setText("Vértices sumidouros");
        jBVerticesSumidouros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVerticesSumidourosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jBAbrirGrafo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtArqGrafo, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jBOrdemGrafo, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jtOrdemGrafo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBFechar)
                        .addGap(0, 443, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jBArestasAdjacentes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                                        .addComponent(jBGrauEmissao, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jBVerticesIsolados, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jBGrauVertice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jBVerticesFontes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jBArestasIndependentes))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jBVerticesIndependentes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                                    .addComponent(jBVerticesAdjacentes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jBGrauRecepcao, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jBVerticesTerminais, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jBIncidenciaAresta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jBVerticesSumidouros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jBConjuntoVertices, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jBConjuntoArestas, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(70, 70, 70))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtArqGrafo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBAbrirGrafo)
                    .addComponent(jBOrdemGrafo)
                    .addComponent(jtOrdemGrafo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBConjuntoVertices)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBConjuntoArestas)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jBGrauVertice, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(jBIncidenciaAresta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBVerticesIsolados, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBVerticesTerminais, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBGrauEmissao, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBGrauRecepcao, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBArestasAdjacentes, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jBVerticesAdjacentes, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jBArestasIndependentes, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jBVerticesIndependentes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jBVerticesSumidouros, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(jBVerticesFontes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, Short.MAX_VALUE)
                .addComponent(jBFechar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void jBAbrirGrafoActionPerformed(java.awt.event.ActionEvent evt) {                                             
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showOpenDialog(this);
        File xmlFileLer = new File(fileChooser.getSelectedFile().getName());
        jtArqGrafo.setText(fileChooser.getSelectedFile().getName().substring(0, fileChooser.getSelectedFile().getName().lastIndexOf(".")));

        XStream xstream = new XStream(new DomDriver());
        xstream.processAnnotations(Grafo.class);
        grafo = (Grafo) xstream.fromXML(xmlFileLer);
        grafo.geraMatriz();
        grafo.geraMatrizIncidencia();
        String xml = xstream.toXML(grafo);
        System.out.println(xml);

    }                                            

    private void jBFecharActionPerformed(java.awt.event.ActionEvent evt) {                                         
        setVisible(false);
    }                                        

    private void jtArqGrafoActionPerformed(java.awt.event.ActionEvent evt) {                                           

    }                                          

    private void jBOrdemGrafoActionPerformed(java.awt.event.ActionEvent evt) {                                             
        jtOrdemGrafo.setText(grafo.getOrdem() + "");
    }                                            

    private void jBConjuntoVerticesActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        jtConjuntoVertices.setText(grafo.getConjuntoVertices());
    }                                                  

    private void jBConjuntoArestasActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        jtConjuntoArestas.setText(grafo.getConjuntoArestas());
    }                                                 

    private void jBIncidenciaArestaActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        JOptionPane.showMessageDialog(null, "As incidências das arestas são:\n" + grafo.getIncidenciaArestas(grafo));
    }                                                  

    private void jBGrauEmissaoActionPerformed(java.awt.event.ActionEvent evt) {                                              
        JOptionPane.showMessageDialog(null, "Os graus de emissão dos vértices são:\n" + grafo.getMensagemGrau(grafo, "Emissao"));
    }                                             

    private void jBGrauRecepcaoActionPerformed(java.awt.event.ActionEvent evt) {                                               
        JOptionPane.showMessageDialog(null, "Os graus de recepção dos vértices são:\n" + grafo.getMensagemGrau(grafo, "Recepcao"));
    }                                              

    private void jBGrauVerticeActionPerformed(java.awt.event.ActionEvent evt) {                                              
        JOptionPane.showMessageDialog(null, "Os graus dos vértices são:\n" + grafo.getMensagemGrau(grafo, "Vertice"));
    }                                             

    private void jBArestasAdjacentesActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        JOptionPane.showMessageDialog(null, "Os Grupos de arestas adjacentes são:\n" + grafo.getArestasAdjacentes());
    }                                                   

    private void jBVerticesAdjacentesActionPerformed(java.awt.event.ActionEvent evt) {                                                     
        JOptionPane.showMessageDialog(null, "Os pares de vértices adjacentes são:" + grafo.getVerticesAdjacentes());
    }                                                    

    private void jBArestasIndependentesActionPerformed(java.awt.event.ActionEvent evt) {                                                       
        JOptionPane.showMessageDialog(null, "As arestas independentes são:\n" + grafo.getArestasIndependentes());
    }                                                      

    private void jBVerticesIndependentesActionPerformed(java.awt.event.ActionEvent evt) {                                                        
        JOptionPane.showMessageDialog(null, "Os vértices independentes são:\n" + grafo.getVerticesIndependentes());
    }                                                       

    private void jBVerticesIsoladosActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        JOptionPane.showMessageDialog(null, "Os vértices isolados são:" + grafo.getVerticesIsolados(grafo));
    }                                                  

    private void jBVerticesTerminaisActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        JOptionPane.showMessageDialog(null, "Os vértices terminais são:\n" + grafo.getVerticesTerminais(grafo));
    }                                                   

    private void jBVerticesFontesActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        JOptionPane.showMessageDialog(null, "Os vértices fontes são:\n" + grafo.getVerticesFontes(grafo));
    }                                                

    private void jBVerticesSumidourosActionPerformed(java.awt.event.ActionEvent evt) {                                                     
        JOptionPane.showMessageDialog(null, "Os vértices sumidouros são:\n" + grafo.getVerticesSumidouros(grafo));
    }                                                    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DadosGrafos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DadosGrafos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DadosGrafos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DadosGrafos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DadosGrafos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jBAbrirGrafo;
    private javax.swing.JButton jBArestasAdjacentes;
    private javax.swing.JButton jBArestasIndependentes;
    private javax.swing.JButton jBConjuntoArestas;
    private javax.swing.JButton jBConjuntoVertices;
    private javax.swing.JButton jBFechar;
    private javax.swing.JButton jBGrauEmissao;
    private javax.swing.JButton jBGrauRecepcao;
    private javax.swing.JButton jBGrauVertice;
    private javax.swing.JButton jBIncidenciaAresta;
    private javax.swing.JButton jBOrdemGrafo;
    private javax.swing.JButton jBVerticesAdjacentes;
    private javax.swing.JButton jBVerticesFontes;
    private javax.swing.JButton jBVerticesIndependentes;
    private javax.swing.JButton jBVerticesIsolados;
    private javax.swing.JButton jBVerticesSumidouros;
    private javax.swing.JButton jBVerticesTerminais;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jtArqGrafo;
    private javax.swing.JTextArea jtConjuntoArestas;
    private javax.swing.JTextArea jtConjuntoVertices;
    private javax.swing.JTextField jtOrdemGrafo;
    // End of variables declaration                   
}
